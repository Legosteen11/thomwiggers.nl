[{"authors":["Thom Wiggers"],"categories":null,"content":" Master\u0026rsquo;s thesis written under the supervision of Simona Samardjiska.\nSoftware  The Rust bindings for M4RI can be found on crates.io and Github. The implementations of attacks on LPN can be found on crates.io and Github (documentation).  ","date":1537833600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537536788,"objectID":"b3c39984acd73af8986c39fdda5d344a","permalink":"/publication/masters-thesis/","publishdate":"2018-09-25T00:00:00Z","relpermalink":"/publication/masters-thesis/","section":"publication","summary":" Master\u0026rsquo;s thesis written under the supervision of Simona Samardjiska.\nSoftware  The Rust bindings for M4RI can be found on crates.io and Github. The implementations of attacks on LPN can be found on crates.io and Github (documentation).  ","tags":null,"title":"Solving LPN using Large Covering Codes","type":"publication"},{"authors":["Thom Wiggers"],"categories":null,"content":" To appear in the proceedings of LATINCRYPT 2017.\nSoftware  Aarchimate is a python library that helps write assembly programs by handling the register allocation. It is a dependency to many of the programs below. AArch64 multipliers: multiplication optimised for Cortex-A53. Microbenchmarking software ODROID-C2 management: Ansible playbooks for managing a cluster of ODROID C2s.  ","date":1508457600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537536788,"objectID":"52157ff690e49fef7f8c1767cd09a1e1","permalink":"/publication/armcluster/","publishdate":"2017-10-20T00:00:00Z","relpermalink":"/publication/armcluster/","section":"publication","summary":"Getting a lot of CPU power used to be an expensive under-taking.\n  Servers with many cores cost a lot of money and consume large amounts of energy.\n  The developments in hardware for mobile devices has resulted in a surge in relatively cheap, powerful, and low-energy CPUs.\n  In this paper we show how to build a low-energy, eighty-core cluster built around twenty ODROID-C2 development boards for under 1500 USD.\n  The ODROID-C2 is a 46 USD microcomputer that provides a 1.536 GHz quad-core Cortex-A53-based CPU and 2 GB of RAM.\n  We investigate the cluster’s application to cryptanalysis by implementing Pollard’s Rho method to tackle the Certicom ECC2K-130 elliptic curve challenge.\n  We optimise software from the Breaking ECC2K-130 technical report for the Cortex-A53.\n  To do so, we show how to use microbenchmarking to derive the needed instruction characteristics which ARM neglected to document for the public.\n  The implementation of the ECC2K-130 attack finally allows us to compare the proposed platform to various other platforms, including “classical” desktop CPUs, GPUs and FPGAs.\n  Although it may still be slower than for example FPGAs, our cluster still provides a lot of value for money.","tags":[],"title":"Energy-efficient ARM64 Cluster with Cryptanalytic Applications: 80 cores that do not cost you an ARM and a leg","type":"publication"},{"authors":null,"categories":null,"content":"I\u0026rsquo;m going to Cuba as my submission to Latincrypt 2017 was accepted! The paper is called Energy-efficient ARM64 Cluster with Cryptanalytic Applications: 80 cores that do not cost you an ARM and a leg. Visit the accompanying page to view the software. I\u0026rsquo;ll upload the paper once I\u0026rsquo;m done editing.\n","date":1503599733,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"54ac9ee91009743edd5855a5dff02187","permalink":"/post/2017-08-24-latincrypt_paper/","publishdate":"2017-08-24T20:35:33+02:00","relpermalink":"/post/2017-08-24-latincrypt_paper/","section":"post","summary":"I\u0026rsquo;m going to Cuba as my submission to Latincrypt 2017 was accepted! The paper is called Energy-efficient ARM64 Cluster with Cryptanalytic Applications: 80 cores that do not cost you an ARM and a leg. Visit the accompanying page to view the software. I\u0026rsquo;ll upload the paper once I\u0026rsquo;m done editing.","tags":null,"title":"Latincrypt paper!","type":"post"},{"authors":null,"categories":null,"content":"You can set up SSH to prefer Elliptic Curve cryptography over RSA, and use modern key exchange algorithms without exposing yourself to Logjam-style attacks. It\u0026rsquo;s also good to get rid of SHA1 and MD5.\nA good resource is the OpenSSH Guidelines page on the Mozilla wiki. You can basically copy the config.\nCaveat: I found out that the version of Paramiko in Debian Jessie does not support SHA2 hashes or ECC in the key exchange. Paramiko was used in my case by duplicity. If you upgrade to the most recent version from pypi you can use diffie-hellman-exchange-group-sha256.\n","date":1454081223,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"4294839947ebc3b4d7936f3e9f75ad70","permalink":"/post/2016-01-29-securing_openssh/","publishdate":"2016-01-29T16:27:03+01:00","relpermalink":"/post/2016-01-29-securing_openssh/","section":"post","summary":"You can set up SSH to prefer Elliptic Curve cryptography over RSA, and use modern key exchange algorithms without exposing yourself to Logjam-style attacks. It\u0026rsquo;s also good to get rid of SHA1 and MD5.\nA good resource is the OpenSSH Guidelines page on the Mozilla wiki. You can basically copy the config.\nCaveat: I found out that the version of Paramiko in Debian Jessie does not support SHA2 hashes or ECC in the key exchange.","tags":null,"title":"Securing OpenSSH","type":"post"},{"authors":["Thom Wiggers"],"categories":null,"content":"See the project page for more information.\n","date":1447977600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537536788,"objectID":"169ad082478aad349d4ff66a971bc778","permalink":"/publication/bsc-src-paper/","publishdate":"2015-11-20T00:00:00Z","relpermalink":"/publication/bsc-src-paper/","section":"publication","summary":"Prøst was a contestant in the CAESAR competition for Authenticated Encryption. I optimised Prøst for the ARM11 microprocessor architecture. By trying to find a provably minimal program for one of the sub-operations, I found a new approach to implementing MixSlices, one of the sub-operations in Prøst's permute function. This new implementation has 33% fewer arithmetic operations than the original version. Using this result and by implementing Prøst in assembly and applying micro-optimisations, a performance gain of 28% to 48% was achieved.","tags":[],"title":"Implementing CAESAR candidate Prøst on ARM11","type":"publication"},{"authors":null,"categories":null,"content":"In July, Peter Schwabe, who supervised my Bachelor\u0026rsquo;s thesis project, suggested to submit my work to the Student Research Conference. It then turned out that the deadline was the next day, so I had to work hard to convert 28 pages of thesis into a paper of 4 pages.\nTo my own suprise my paper was accepted for a poster presentation. It was very interesting and challenging to tell the people at the conference (which was at Tilburg University) about my research: I had a very technical story, and a lot of people in the humanities already are scared by the word \u0026ldquo;encryption\u0026rdquo;. Nevertheless it was a nice experience and I think I was able to get at least some things through to people.\nI\u0026rsquo;ve updated my Prøst page with the published paper and the poster I presented.\n","date":1447601575,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"de5f09293458f1f711a81e522f8bc6ea","permalink":"/post/2015-11-15-proest_at_student_research_conference/","publishdate":"2015-11-15T15:32:55Z","relpermalink":"/post/2015-11-15-proest_at_student_research_conference/","section":"post","summary":"In July, Peter Schwabe, who supervised my Bachelor\u0026rsquo;s thesis project, suggested to submit my work to the Student Research Conference. It then turned out that the deadline was the next day, so I had to work hard to convert 28 pages of thesis into a paper of 4 pages.\nTo my own suprise my paper was accepted for a poster presentation. It was very interesting and challenging to tell the people at the conference (which was at Tilburg University) about my research: I had a very technical story, and a lot of people in the humanities already are scared by the word \u0026ldquo;encryption\u0026rdquo;.","tags":null,"title":"Prøst at Student Research Conference","type":"post"},{"authors":null,"categories":null,"content":"Tegenlicht today had an episode about Bitcoin where they announced they were going to give away €100 in Bitcoin. They were going to put up a Bitcoin wallet private key as a QR-code on the screen.\nIt seemed to me like a fun project to try and grab that Bitcoin. I coded an app that takes a screenshot every couple seconds and then tries to detect all QR-codes in it. If any of the codes look like a private key, I then used the Blockcypher API to determine the balance and empty the account into my own wallet.\nUnfortunately, the NPO stream was probably too slow and I was a couple moments too late. It still was a fun challenge to program though and I learnt a bit about how Bitcoin works.\nThe code is available on here on Github\n","date":1446413316,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"946c24fb49a9c24212d09ee096af7cae","permalink":"/post/2015-11-01-bitcoin_private_key_qrcode_scraper/","publishdate":"2015-11-01T21:28:36Z","relpermalink":"/post/2015-11-01-bitcoin_private_key_qrcode_scraper/","section":"post","summary":"Tegenlicht today had an episode about Bitcoin where they announced they were going to give away €100 in Bitcoin. They were going to put up a Bitcoin wallet private key as a QR-code on the screen.\nIt seemed to me like a fun project to try and grab that Bitcoin. I coded an app that takes a screenshot every couple seconds and then tries to detect all QR-codes in it. If any of the codes look like a private key, I then used the Blockcypher API to determine the balance and empty the account into my own wallet.","tags":null,"title":"Bitcoin private key qrcode scraper","type":"post"},{"authors":null,"categories":null,"content":"I\u0026rsquo;ve had to rename some fields today with MongoEngine. Using the following approach, I was able to raise DeprecationWarnings when old version were used.\nCreate the following function. It returns a property that will access the new variable name.\n\ndef deprecated_field(new_name): \u0026quot;\u0026quot;\u0026quot;Wrapper for deprecated fields\u0026quot;\u0026quot;\u0026quot; def getter(self): warnings.warn('This field is deprecated, use {}'.format(new_name), DeprecationWarning, stacklevel=2) return getattr(self, new_name) def setter(self, value): warnings.warn('This field is deprecated, use {}'.format(new_name), DeprecationWarning, stacklevel=2) return setattr(self, new_name, value) return property(getter, setter)  Now use this function whenever you need to deprecate something\nclass A: new_x = 'something' old_x = deprecated_field('new_x')  Trying to access A.old_x will now get the warning.\nThis will probably also work for regular Django Models, but I haven\u0026rsquo;t tested that.\n","date":1437930105,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"44e13647c9b9591fb7d1aee6736e401e","permalink":"/post/2015-07-26-deprecating_fields_in_mongoengine_documents/","publishdate":"2015-07-26T17:01:45Z","relpermalink":"/post/2015-07-26-deprecating_fields_in_mongoengine_documents/","section":"post","summary":"I\u0026rsquo;ve had to rename some fields today with MongoEngine. Using the following approach, I was able to raise DeprecationWarnings when old version were used.\nCreate the following function. It returns a property that will access the new variable name.\n\n","tags":null,"title":"Deprecating fields in MongoEngine Documents","type":"post"},{"authors":null,"categories":null,"content":"Prøst is an authenticated encryption cipher and a contestant in the CAESAR competition for Authenticated Encryption. For my bachelor thesis research project, I\u0026rsquo;ve implemented Prøst on ARM11.\nYou can find more information about this project on this page.\n","date":1429972760,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1429972760,"objectID":"bda703bb3e3888a7dc5d1a19bc27774f","permalink":"/post/2015-04-25-pr%C3%B8st/","publishdate":"2015-04-25T14:39:20Z","relpermalink":"/post/2015-04-25-pr%C3%B8st/","section":"post","summary":"Prøst is an authenticated encryption cipher and a contestant in the CAESAR competition for Authenticated Encryption. For my bachelor thesis research project, I\u0026rsquo;ve implemented Prøst on ARM11.\nYou can find more information about this project on this page.","tags":null,"title":"Prøst","type":"post"},{"authors":["Thom Wiggers"],"categories":null,"content":"Bachelor\u0026rsquo;s thesis written under the supervision of Peter Schwabe.\nSee the project page for more information.\n","date":1428624000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537536788,"objectID":"831c968e98d7b4762c75d083cd5364de","permalink":"/publication/bachelors-thesis/","publishdate":"2015-04-10T00:00:00Z","relpermalink":"/publication/bachelors-thesis/","section":"publication","summary":"My abstract","tags":null,"title":"Implementing Prøst on ARM11","type":"publication"},{"authors":null,"categories":null,"content":"Today I\u0026rsquo;ve tried to globally install Powerline. That was a bit of a pain because it has no global config files.\nQuick and dirty how-to:\n Add XDG_CONFIG_DIRS=/etc/xdg to /etc/environment if it isn\u0026rsquo;t already set, Copy the config to /etc/xdg/powerline, Customize config, Load powerline from /etc/bash.bashrc, ~/.zshrc, etc.  My config can be found at on Github\n","date":1411689018,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"0323b3ba44a6a7a33130e08bf43fd848","permalink":"/post/2014-09-25-globally_install_powerline/","publishdate":"2014-09-25T23:50:18Z","relpermalink":"/post/2014-09-25-globally_install_powerline/","section":"post","summary":"Today I\u0026rsquo;ve tried to globally install Powerline. That was a bit of a pain because it has no global config files.\nQuick and dirty how-to:\n Add XDG_CONFIG_DIRS=/etc/xdg to /etc/environment if it isn\u0026rsquo;t already set, Copy the config to /etc/xdg/powerline, Customize config, Load powerline from /etc/bash.bashrc, ~/.zshrc, etc.  My config can be found at on Github","tags":null,"title":"Globally install powerline","type":"post"},{"authors":null,"categories":null,"content":"Today, I enabled perfect forward secrecy on my nginx installation. I\u0026rsquo;m writing down the config so I can easily find it later.\n\nI just put the below config lines in a file called /etc/nginx/conf.d/ssl.conf and now SSLlabs show PFS is enabled.\nssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK; ssl_session_cache builtin:1000 shared:SSL:10m; ssl_dhparam /etc/ssl/certs/dhparam.pem;  The SSL cipher suite has been borrowed from this Mozilla wiki.\nYou need to create dhparam.pem by doing this in a root shell:\n# openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096  Enable HTTP Strict Transport Security (HSTS) by putting this in the relevant site configs:\nadd_header Strict-Transport-Security max-age=63072000;  To add OSCP stapling, also add these lines:\nssl_trusted_certificate /path/to/intermediates/plus/ca/root/certificate; ssl_stapling on; ssl_stapling_verify on;  To prevent attacks with \u0026lt;iframe\u0026gt; tags, add:\nadd_header X-Frame-Options DENY; # or SAMEORIGIN  To stop browsers from sniffing the MIME response type:\nadd_header X-Content-Type-Options nosniff;  Don\u0026rsquo;t forget to restart nginx after making this change.\n","date":1407439802,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"443e5883777c88b43278b22c1c74b321","permalink":"/post/2014-08-07-perfect_forward_secrecy_with_nginx/","publishdate":"2014-08-07T19:30:02Z","relpermalink":"/post/2014-08-07-perfect_forward_secrecy_with_nginx/","section":"post","summary":"Today, I enabled perfect forward secrecy on my nginx installation. I\u0026rsquo;m writing down the config so I can easily find it later.\n\n","tags":["linux","nginx","ssl","https","server","ocsp","ocsp stapling"],"title":"Perfect forward secrecy and HSTS with nginx","type":"post"},{"authors":null,"categories":null,"content":"I recently read The Circle by Dave Eggers. It is a bit like the classic dystopian novel 1984 being brought up to date in the age of smartphones, apps and Google, Facebook and Twitter. Though it does not have very novel ideas, Eggers paints a picture of the tyranny of the masses and of the consequences of a society that only has a surface level.\n\nThough the characters are pretty flat and lead character Mae quickly turns from a smart girl with ideals into a one-dimensional surface that believes anything that she is told, the story was pretty captivating and chilling. The ending seemed pretty rushed, though, and after reading it it you just put your e-reader aside. The lack of dissidence outside of Mercer also seems a bit unrealistic.\nIt was a good read, and although the book wasn\u0026rsquo;t mindblowing at least I\u0026rsquo;ll have a new argument when people say that they\u0026rsquo;ve got nothing to hide.\n","date":1407260633,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"f700a41e8e647df0cef754c3cdebc08a","permalink":"/post/2014-08-05-the_circle/","publishdate":"2014-08-05T17:43:53Z","relpermalink":"/post/2014-08-05-the_circle/","section":"post","summary":"I recently read The Circle by Dave Eggers. It is a bit like the classic dystopian novel 1984 being brought up to date in the age of smartphones, apps and Google, Facebook and Twitter. Though it does not have very novel ideas, Eggers paints a picture of the tyranny of the masses and of the consequences of a society that only has a surface level.\n\n","tags":["books","review","fiction"],"title":"Dave Eggers – The Circle","type":"post"},{"authors":null,"categories":null,"content":"Blendle is een kort geleden gelanceerde website waarop je digitaal door kranten en tijdschriften kan bladeren. Denk je \u0026ldquo;goh, dit wil ik wel lezen\u0026rdquo;, dan kun je met één klik het artikel openen en tegen betaling van zo\u0026rsquo;n € 0,10 het artikel lezen. Dit alles in een simpele, maar heel effectieve website.\n\nIk moet zeggen, ik ben om. Dit werkt heel goed. Ik zie het al gebeuren dat over een paar maanden mensen artikelen met elkaar gaan delen door blendle-links te sturen. Ook vind ik het erg fijn dat ik heel veel verschillende kranten tegelijkertijd kan lezen.\nEr is alleen een probleem: hoewel tien cent niet veel is, gaat het toch best hard als je op mijn tempo artikelen consumeert. En dan wordt het wel een beetje kostbaar. Drie artikelen uit De Groene Amsterdammer kost je toch al gauw € 2,70\u0026hellip; Ik klik veel artikelen al niet aan, omdat ik anders beter een abonnement kan afsluiten. Misschien kan ik ook maar beter een abonnement afsluiten. Maar dan heb ik niet die fijne app waarin ik kan lezen.\nBlendle is een goede eerste stap. Het betalen-per-artikel heeft denk ik echter vooral zin voor mensen die weinig kranten lezen en voor het delen van artikelen op social media. Ik zou echter graag de volgende dingen zien:\n abonnementen, hele nummers van tijdschriften kopen, all you can read.  Vooral dat laatste zou een instant buy opleveren, mits het een beetje schappelijk geprijsd is.\n","date":1398959415,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"f229d53e37839272c25b8da3a061ccd2","permalink":"/post/2014-05-01-blendle/","publishdate":"2014-05-01T15:50:15Z","relpermalink":"/post/2014-05-01-blendle/","section":"post","summary":"Blendle is een kort geleden gelanceerde website waarop je digitaal door kranten en tijdschriften kan bladeren. Denk je \u0026ldquo;goh, dit wil ik wel lezen\u0026rdquo;, dan kun je met één klik het artikel openen en tegen betaling van zo\u0026rsquo;n € 0,10 het artikel lezen. Dit alles in een simpele, maar heel effectieve website.\n\n","tags":["blendle media kranten tijdschriften"],"title":"Blendle","type":"post"},{"authors":null,"categories":null,"content":"As you can see, this site has been overhauled! I am now using the pretty awesome Jekyll static site generator.\nThe source of my website is on Github.\n","date":1398879846,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"c3c607b42da76c35ce697fd1dd6b905e","permalink":"/post/2014-04-30-jekyll/","publishdate":"2014-04-30T17:44:06Z","relpermalink":"/post/2014-04-30-jekyll/","section":"post","summary":"As you can see, this site has been overhauled! I am now using the pretty awesome Jekyll static site generator.\nThe source of my website is on Github.","tags":null,"title":"Jekyll","type":"post"},{"authors":null,"categories":["security"],"content":"For crypto code it's important that it's time-invariant, otherwise it is vulnerable to timing attacks. I've had to build this time-invariant equality test from scratch, because I couldn't find something on Google. I hope it's useful to someone else. \n; ; Linear time equality ; ; Author: Thom Wiggers ; ; based on this C code: ; int equals (int a, int b) { ; unsigned long long t = a ^ b; ; return 1-((-t) \u0026gt;\u0026gt; 63); ; } ; stores result in first argument .macro linear_equals ; register A, register B EOR @0, @1 NEG @0 BRVS skiplinearequalsoverflow ; I don't know how else to take care of the overflow. ROR @0 ; if this is just one operation, it still is time-invariant. skiplinearequalsoverflow: LSR @0 LSR @0 LSR @0 LSR @0 LSR @0 LSR @0 LSR @0 NEG @0 inc @0 .endm .exit ;; everything here isn't executed ;; This test proves that the above code works. TEST: mov r2, r16 mov r3, r17 linear_equals r2, r3 BREQ skipnop CP r16, r17 ; check if it's indeed equal BREQ skipnop nop ; for breakpoints inc r15 ; amount of mistakes skipnop: inc r16 CPI r16, 0xFF BRNE skipinc ; j + 1, i = 0 inc r17 clr r16 skipinc: CPI r17, 0xFF BRNE skipbreak ; done break skipbreak: rjmp test ","date":1395422710,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"180763b169c97fad5b8c5a9a76507545","permalink":"/post/2014-03-21-time-invariant-equality-in-assembly/","publishdate":"2014-03-21T18:25:10+01:00","relpermalink":"/post/2014-03-21-time-invariant-equality-in-assembly/","section":"post","summary":"For crypto code it's important that it's time-invariant, otherwise it is vulnerable to timing attacks. I've had to build this time-invariant equality test from scratch, because I couldn't find something on Google. I hope it's useful to someone else. \n","tags":["assembly","cryptography","software","avr"],"title":"Time-invariant equality in assembly","type":"post"},{"authors":null,"categories":["Security"],"content":"Users of PGP will be aware of the many keyservers around the web. Keybase.io has launched as an interesting alternative to the 'boring' and complicated keyservers. They provide an easy CLI client and web client (if you choose to share your private key - I didn't) for PGP crypto, where you don't need to know someone's key id - just their username on Twitter or GitHub.\n\nOne of the main problems I see with most crypto tools, like PGP, is usability. Without innovations I don't think it will ever reach the masses. I'll be paying attention to keybase and see how it develops.\nMy keybase.io account id is thomwiggers.\n","date":1394971947,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"b0ffc5483be196755194b0a7828b9d54","permalink":"/post/2014-03-16-keybase-io/","publishdate":"2014-03-16T13:12:27+01:00","relpermalink":"/post/2014-03-16-keybase-io/","section":"post","summary":"Users of PGP will be aware of the many keyservers around the web. Keybase.io has launched as an interesting alternative to the 'boring' and complicated keyservers. They provide an easy CLI client and web client (if you choose to share your private key - I didn't) for PGP crypto, where you don't need to know someone's key id - just their username on Twitter or GitHub.\n\n","tags":["pki","crypto","pgp","gpg"],"title":"Keybase.io","type":"post"},{"authors":null,"categories":["security"],"content":"Instead of trusting Telegram (which is a bad idea, try using Google for a few minutes, or start here) I'm going to bet on TextSecure, which actually does something other cryptographers agree with..\n\nIf you wish to verify it, my TextSecure identity is this:\n\nYou can verify it's me by the image's PGP signature available here, if there exists a trust path between us.\n$ gpg --verify textsecure-identity.png.asc gpg: assuming signed data in 'textsecure-identity.png' gpg: Signature made Sun 15 Mar 2015 23:59:12 CET gpg: using DSA key 0x4175F59CF3EB45FC gpg: Good signature from \u0026quot;Thom Wiggers \u0026lt;thom@thomwiggers.nl\u0026gt;\u0026quot; [ultimate] gpg: aka \u0026quot;Thom Wiggers (Alternate address) \u0026lt;thom@rded.nl\u0026gt;\u0026quot; [ultimate] gpg: aka \u0026quot;Thom Wiggers (Radboud University email) \u0026lt;t.wiggers@ru.nl\u0026gt;\u0026quot; [ultimate] gpg: aka \u0026quot;[jpeg image of size 5009]\u0026quot; [ultimate] Primary key fingerprint: C313 856D 66DA 0DDD DC5C 6203 915D 4ED3 4871 E82F Subkey fingerprint: 7082 D299 60EA D3F1 5F21 C85F 4175 F59C F3EB 45FC  Edit 2015-03-16: Updated image to match my new key on my new phone.\n","date":1393289506,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"df3e6d06668228e0023166ac2a709ac5","permalink":"/post/2014-02-25-textsecure/","publishdate":"2014-02-25T01:51:46+01:00","relpermalink":"/post/2014-02-25-textsecure/","section":"post","summary":"Instead of trusting Telegram (which is a bad idea, try using Google for a few minutes, or start here) I'm going to bet on TextSecure, which actually does something other cryptographers agree with..\n\n","tags":["security","gpg","crypto","pgp","textsecure","telegram"],"title":"TextSecure","type":"post"},{"authors":null,"categories":["Music"],"content":"It's been a while since I posted. Today I decided it was time to behave myself a bit like the pretentious hipster I secretly am and post a bit about the music that I discovered lately.\n London Grammar - If You Wait (2013)  London Grammar are an UK based indie pop band. They released their debut album If You Wait a couple of weeks ago. Pitchfork already wrote a great review about them, so I'm not going to repeat that, but I'd like to highlight their great cover of Kavinsky's Nightcall, capturing the feeling of the original track so nicely.\n  Kill Paris - The Beginning (2012) Kill Paris's tracks are a strange bunch. Electronic masterpieces, having influences of dubstep, indie electro and UK Garage. The tracks remind you of several popular and less popular pieces of music, but done in such a way that it's brand new and just makes you want to dance.\n   This album is available from Bandcamp.\nArcade Fire - The Suburbs (2010)  An album which I completely missed back when it was released. Grammy winner (which led to hilarious reactions) and overal awesome release. I particularly like the album's second track, Ready To Start.\nArcade Fire is releasing a new album soon called Reflektor. It's title track Reflektor has already been released and is also a great way to start your day.\n  CHVRCHES - The Bones of What You Believe (2013) Great, happy indie pop. The band picked this name because you wouldn't be able to find them in Google's search engine if they'd be named \"Churches\". This is their first album. Great stuff to listen to if you're in a happy, uncomplicated mood.\n   ","date":1380481242,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"3b22f3c68f0110e76f3d8861d084dfc2","permalink":"/post/2013-09-29-music-review/","publishdate":"2013-09-29T21:00:42+02:00","relpermalink":"/post/2013-09-29-music-review/","section":"post","summary":"It's been a while since I posted. Today I decided it was time to behave myself a bit like the pretentious hipster I secretly am and post a bit about the music that I discovered lately.\n London Grammar - If You Wait (2013)  London Grammar are an UK based indie pop band. They released their debut album If You Wait a couple of weeks ago. Pitchfork already wrote a great review about them, so I'm not going to repeat that, but I'd like to highlight their great cover of Kavinsky's Nightcall, capturing the feeling of the original track so nicely.","tags":["kill paris","london grammar","Arcade Fire","If You Wait","The Beginning","The Suburbs","review"],"title":"Music Review","type":"post"},{"authors":null,"categories":["Linux"],"content":"While playing with my ePass2003 on my Gentoo installation today, I had some trouble getting it to work. As it turned out, you need the following use flags enabled:\n# /etc/portage/package.use dev-libs/opensc pcsc-lite secure-messaging  Hope this helps someone.\n","date":1369513795,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"d23704d48a933040e55cb591c22915f6","permalink":"/post/2013-05-25-opensc-gentoo-feitian-epass-2003/","publishdate":"2013-05-25T22:29:55+02:00","relpermalink":"/post/2013-05-25-opensc-gentoo-feitian-epass-2003/","section":"post","summary":"While playing with my ePass2003 on my Gentoo installation today, I had some trouble getting it to work. As it turned out, you need the following use flags enabled:\n# /etc/portage/package.use dev-libs/opensc pcsc-lite secure-messaging  Hope this helps someone.","tags":["linux","pki","epass2003","gentoo","english"],"title":"OpenSC, Gentoo \u0026 Feitian ePass 2003","type":"post"},{"authors":null,"categories":null,"content":" This page lists the products of my Bachelor\u0026rsquo;s thesis research.\nPrøst Prøst is an authenticated encryption cipher and a contestant in the CAESAR competition for Authenticated Encryption. For my bachelor thesis research project, I’ve implemented Prøst on ARM11.\nSoftware  Prøst on ARM can be found on Github here. My demo implementation of Prøst in Python can be found in this Github repository. My implementation of the Shortest Straight Line program finder is also available on Github. My modified version of qhasm is also available on Github. The no-stack version is available from the branch nostack. My implementation of Boyar\u0026rsquo;s heuristic for finding shorter straight line programs can be found here. My packaged version of cpucycles4ns can be found at Github.  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537536788,"objectID":"c03396a6ecc83e51b237eb9e50916971","permalink":"/project/bachelors-thesis/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/project/bachelors-thesis/","section":"project","summary":"This page lists the products of my Bachelor\u0026rsquo;s thesis research.\nPrøst Prøst is an authenticated encryption cipher and a contestant in the CAESAR competition for Authenticated Encryption. For my bachelor thesis research project, I’ve implemented Prøst on ARM11.\nSoftware  Prøst on ARM can be found on Github here. My demo implementation of Prøst in Python can be found in this Github repository. My implementation of the Shortest Straight Line program finder is also available on Github.","tags":null,"title":"Bachelor's thesis","type":"project"},{"authors":null,"categories":["security"],"content":"I have a fairly creative ssl setup on my webserver:\n I run my own \u0026lsquo;certificate authority\u0026rsquo; which signs the server certificate; I have a bunch of alternative names specified; The CA certificate sits on an ePass 2003 PKI token.  I\u0026rsquo;m writing down how I sign certificates in this context so I can use this to look up the procedure instead of spending hours in DuckDuckGo. This is more of a tutorial than elegant prose.\n\nCreating the certificate request: I use this openssl config, saved as req.cnf. I found an example version file somewhere but I can\u0026rsquo;t remember where, this is the one with my own modifications.\n[ req ] default_bits = 4096 default_keyfile = server.rded.nl.key encrypt_key = no default_md = sha256 prompt = no utf8 = yes req_extensions = my_extensions distinguished_name = my_req_name [ my_req_name ] C = NL ST = Gelderland L = Nijmegen O = Thom Wiggers servers CN = *.rded.nl [ my_extensions ] basicConstraints=CA:FALSE subjectAltName=@my_subject_alts subjectKeyIdentifier = hash [my_subject_alts] DNS.1 = *.thomwiggers.nl DNS.2 = thomwiggers.nl DNS.3 = *.rded.nl DNS.4 = rded.nl DNS.5 = *.clearlyreta.rded.nl  I use this command to then create a new certificate request:\nopenssl req -new -key /etc/ssl/private/wildcard_private.key \\ -out server.csr -config req.cnf -days 365  File wildcard_private.key is my private key. You might still need to generate one.\nSign the certificate request: Step 1: figure out the key id:\n$ pkcs15-tool --list-keys  (Thom, it\u0026rsquo;s the one with a16)\nThen start the openssl console and execute the following (be sure to replace \u0026lt;id\u0026gt;):\n$ openssl OpenSSL\u0026gt; engine dynamic \\ -pre SO_PATH:/usr/lib/engines/engine_pkcs11.so \\ -pre ID:pkcs11 \\ -pre LIST_ADD:1 \\ -pre LOAD \\ -pre MODULE_PATH:opensc-pkcs11.so OpenSSL\u0026gt; ca -engine pkcs11 \\ -keyform engine \\ -cert ca.pem \\ -keyfile slot_1-id_\u0026lt;id\u0026gt; \\ -in wildcard_2_request.csr \\ -out cert.pem \\ -outdir . \\ -days 365  And then you can upload cert.pem back to your server.\nWeird stuff:  I had to run the signing step as root and had to add some weird files in /etc/ssl/.\n You get a non-obvious error if you issue a new cert for other domains with the same subject.\n  Sources:  Gooze tutorial OpenSC wiki man pages of openssl  Edits: 2015-1-22: Updated req.cnf to have better defaults, added same-subject note.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537539318,"objectID":"39f990e2382995398d2518e7ca79cdb7","permalink":"/post/2014-06-10-certificate-signing/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/2014-06-10-certificate-signing/","section":"post","summary":"I have a fairly creative ssl setup on my webserver:\n I run my own \u0026lsquo;certificate authority\u0026rsquo; which signs the server certificate; I have a bunch of alternative names specified; The CA certificate sits on an ePass 2003 PKI token.  I\u0026rsquo;m writing down how I sign certificates in this context so I can use this to look up the procedure instead of spending hours in DuckDuckGo. This is more of a tutorial than elegant prose.\n\n","tags":["openssl","certificates","ssl","ca","epass2003","pki"],"title":"Certificate signing with an ePass2003","type":"post"}]